    // using System.Windows.Forms;
    // using System.Drawing;
    // ...
    [ToolboxBitmap(typeof(TextBox))]
    public class CTextBox: TextBox
    {
        protected override void OnKeyDown(KeyEventArgs e)
        {
            base.OnKeyDown(e);
            switch (e.KeyCode)
            { 
                case Keys.Up:
                    SendKeys.Send("+{Tab}");
                    break;
                case Keys.Down:
                    SendKeys.Send("{Tab}");
                    break;
            }
        }

    }





    [ToolboxBitmap(typeof(Label))]
    public partial class CTimerLabel : UserControl
    {


        public void StopStart()
        {
            this.timer1.Enabled = !(this.timer1.Enabled);
        }

        public int TimeInterval
        {
            set
            {
                this.timer1.Interval = value;
            }
            get
            {
                return this.timer1.Interval;
            }
        }

        private void timer1_Tick(object sender, EventArgs e)
        {
            DateTime d = DateTime.Now;
            label1.Text = string.Format("{0:D2}:{1:D2}:{2:D2}", d.Hour, d.Minute, d.Second);
            if (AtTime != null)
                AtTime.Invoke(this, new EventArgs());
        }

        [Browsable(true)]
        public event EventHandler AtTime;


    }



